set -g default-command $SHELL

set -g prefix C-f
set escape-time 20

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'robhurring/tmux-spotify'
set -g @plugin 'ki-chi/tmux-inputmethod'
set -g @plugin 'tmux-plugins/tmux-fpp'
set -g @plugin 'omerxx/tmux-floax'

set -g @floax-bind 'C-y'
set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color '#5e5e5e'
set -g @floax-session-name '☁️ floax'
set -g @floax-title ''
set -g @floax-text-color 'white'

set -g @plugin 'wfxr/tmux-fzf-url'

run '~/dotfiles/tmux/tpad/tpad.tmux'
# Simple scratchpad
set -g @tpad-scratchpad-bind    "C-p"

# Git management with lazygit
set -g @tpad-git-bind        "C-g"
set -g @tpad-git-dir         "#{pane_current_path}"
set -g @tpad-git-cmd         "lazygit"
set -g @tpad-git-width       "85%"
set -g @tpad-git-height      "85%"

# memo
set -g @tpad-memo-bind        "C-n"
set -g @tpad-memo-dir         "~/memo"
set -g @tpad-memo-cmd         "nvim memo.txt"
set -g @tpad-memo-width       "80%"
set -g @tpad-memo-height      "80%"

# bindkeys
unbind-key C-b
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind C-h select-pane -L
bind C-j select-pane -D
bind C-k select-pane -U
bind C-l select-pane -R

bind c new-window -c "#{pane_current_path}"
bind v split-window -hc "#{pane_current_path}" -l 40%
bind s split-window -vc "#{pane_current_path}" -l 20%
bind t new-session

bind -r n next-window
bind -r p previous-window

bind -n M-k resize-pane -U 2
bind -n M-j resize-pane -D 2
bind -n M-h resize-pane -L 3
bind -n M-l resize-pane -R 3

bind C-o resize-pane -Z

bind -n M-p switch-client -p
bind -n M-n switch-client -n

bind -n C-S-Left swap-window -t -1
bind -n C-S-Right swap-window -t +1

bind r source-file ~/dotfiles/tmux/.tmux.conf
bind C-r source-file ~/dotfiles/tmux/.tmux.conf

bind w choose-session -w

bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T edit-mode-vi WheelUpPane send-keys -X scroll-up
bind-key -T edit-mode-vi WheelDownPane send-keys -X scroll-down

bind Left run-shell " \
  current=\$(tmux display -p '#I'); \
  tmux swap-window -t -1; \
  tmux select-window -t \$current \
"

bind Right run-shell " \
  current=\$(tmux display -p '#I'); \
  tmux swap-window -t +1; \
  tmux select-window -t \$current \
"

# options
set-option -g mouse on
set -g detach-on-destroy off
setw -g mode-keys vi
set -s copy-command 'pbcopy'
set-option -g renumber-windows on

# colors
set-option -g default-terminal screen-256color
set -g terminal-overrides 'xterm:colors=256'

set-option -g status-interval 1
set-option -g status-justify "left"
set-option -g status-bg "colour235"
set-option -g status-fg "colour250"
set-option -g status-left-length 20
set-option -g status-left "#S | #[fg=colour255,bg=colour235]#[default]"
set-option -g status-right-length 80
set-option -g status-right "#[fg=colour255,bg=colour235] #(gitmux -cfg $HOME/.config/gitux/.gitmux.conf \"#{pane_current_path}\") | #{iptmthd} | ♫ #{music_status} #{track}"

# set-window-option -g window-status-format '#[fg=colour243] #(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
# set-window-option -g window-status-current-format '#[fg=colour255,bold] #{?window_zoomed_flag,⇕,}#(pwd="#{pane_current_path}"; echo ${pwd####*/}) '
set-window-option -g window-status-format '#[fg=colour243] #{window_name} '
set-window-option -g window-status-current-format '#[fg=colour255,bold] #{?window_zoomed_flag,⇕,}#{window_name} '

set -g status-position bottom
set-option -g message-style bg=colour255,fg=colour235
set-option -g status-style bg=default

set -g pane-border-style bg=colour235,fg=colour244 # not active
set -g pane-active-border-style bg=colour235,fg=colour244
set -g window-style bg=colour235 # not active
set -g window-active-style bg=colour234

set-window-option -g mode-style fg=colour12,bg=colour238

# functions
bind-key "w" run-shell "sesh connect \"$(
  sesh list -t | fzf-tmux -p 55%,60% \
    --preview \"tmux list-windows -t {} -F 'Window: #{window_index} - #{window_name}'\" \
    --no-sort --ansi --border-label ' sesh ' --prompt '⚡  ' \
    --header ' ^t tmux | ^g configs | ^d tmux kill' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-t:change-prompt(📄  )+reload(sesh list -t )' \
    --bind 'ctrl-g:change-prompt(⚙️  )+reload(sesh list -c )' \
    --bind 'ctrl-d:execute(tmux kill-session -t {1..})+change-prompt(⚡  )+reload(sesh list -t)' \
)\""

bind -N "last-session (via sesh) " l run-shell "sesh last"
bind -N "switch to root session (via sesh) " 9 run-shell "sesh connect --root \"$(pwd)\""
bind-key "k" display-popup -E -w 60% "sesh connect \"$( { sesh list -i; ghq list; } | gum filter --limit 1 --no-sort --fuzzy --placeholder 'Pick a sesh or repo' --height 50 --prompt='⚡')\""
bind-key "," command-prompt -p "Window name >" "rename-window '%%'"
bind-key x kill-pane # skip "kill-pane 1? (y/n)" prompt
bind-key "o" display-popup -E -w 40% "sesh connect \"$(
  sesh list -i -H | gum filter --value \"$(sesh root)\" --limit 1 --fuzzy --no-sort --placeholder 'Pick a sesh' --prompt='⚡'readme
)\""

# ウィンドウを右にスワップしてフォーカスを元に戻す
bind-key > run-shell " \
  current_index=\$(tmux display-message -p '#I'); \
  next_index=\$((current_index + 1)); \
  tmux swap-window -t \$next_index; \
  tmux select-window -t \$current_index \
"

# ウィンドウを左にスワップしてフォーカスを元に戻す
bind-key < run-shell " \
  current_index=\$(tmux display-message -p '#I'); \
  prev_index=\$((current_index - 1)); \
  tmux swap-window -t \$prev_index; \
  tmux select-window -t \$current_index \
"

run '$HOME/.tmux/plugins/tpm/tpm'
