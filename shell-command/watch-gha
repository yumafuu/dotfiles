#!/usr/bin/env bash
set -euo pipefail

## 通知用関数（macOSのosascriptを利用）
notify(){
  osascript -e "display notification \"$1\" with title \"GitHub Actions\""
}

if [ $# -ne 1 ]; then
  echo "Usage: $0 <PR番号|PRのURL|ブランチ名>"
  exit 1
fi

INPUT=$1
PR_NUMBER=""
BRANCH=""

# 引数から PR 番号またはブランチ名を判定
if [[ $INPUT =~ ^https?:// ]]; then
  PR_NUMBER=$(echo "$INPUT" | sed -E 's#.*/pull/([0-9]+).*#\1#')
  BRANCH=$(gh pr view "$PR_NUMBER" --json headRefName -q .headRefName)
elif [[ $INPUT =~ ^[0-9]+$ ]]; then
  PR_NUMBER=$INPUT
  BRANCH=$(gh pr view "$PR_NUMBER" --json headRefName -q .headRefName)
else
  BRANCH=$INPUT
fi

if [[ -z $BRANCH ]]; then
  echo "対象ブランチが取得できませんでした"
  exit 1
fi

echo ">>> 監視対象ブランチ: $BRANCH"

# ポーリング：すべての run.status が "completed" になるまで待つ
while :; do
  # running または queued な実行を取得
  PENDING=$(gh run list --branch "$BRANCH" --json status --jq '.[] | select(.status!="completed") | .status' | wc -l)
  if [[ $PENDING -eq 0 ]]; then
    break
  fi
  echo ">>> 待機中: 未完了のワークフロー実行が $PENDING 件あります..."
  sleep 5
done

echo ">>> すべてのワークフローが完了しました。結論をチェックします..."

# 失敗が一つでもあるかどうか確認
FAILURES=$(gh run list --branch "$BRANCH" --json conclusion --jq '.[] | select(.conclusion=="failure" or .conclusion=="timed_out" or .conclusion=="cancelled") | .conclusion' | wc -l)

if [[ $FAILURES -gt 0 ]]; then
  MESSAGE="ブランチ '$BRANCH' のワークフローで $FAILURES 件の失敗が発生しました ⚠️"
  notify "$MESSAGE"
else
  if [[ -n $PR_NUMBER ]]; then
    MESSAGE="PR #$PR_NUMBER のすべてのワークフローが成功しました 🎉"
  else
    MESSAGE="ブランチ '$BRANCH' のすべてのワークフローが成功しました 🎉"
  fi
  notify "$MESSAGE"
fi

